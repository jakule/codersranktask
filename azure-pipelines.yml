# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master
- feature/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.12' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
  GO111MODULE: 'on' # Enable go modules

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get
    go build -v .
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- script: |
    go install github.com/jstemmer/go-junit-report
    go test -v ./... 2>&1 | go-junit-report > ut-report.xml
  workingDirectory: '$(modulePath)'
  displayName: 'Run tests'

- task: PublishTestResults@2
  inputs:
    testRunner: JUnit
    testResultsFiles: $(System.DefaultWorkingDirectory)/**/ut-report.xml

- script: |
    docker login -u _ -p $(HEROKU_TOKEN) registry.heroku.com
    docker build --iidfile imageid.txt -t registry.heroku.com/codersranktask/web .
    echo "Docker Image ID is $(cat imageid.txt)"
    docker push registry.heroku.com/codersranktask/web
    curl -X PATCH https://api.heroku.com/apps/codersranktask/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer $(HEROKU_TOKEN)" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
  workingDirectory: '$(modulePath)'
  displayName: 'Build and push Docker image'
