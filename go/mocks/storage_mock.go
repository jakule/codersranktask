// Code generated by MockGen. DO NOT EDIT.
// Source: go/storage.go

// Package mock_swagger is a generated GoMock package.
package mock_swagger

import (
	"reflect"

	"github.com/golang/mock/gomock"
	"github.com/jakule/codersranktask/go/storage"
)

// MockStorage is a mock of Storage interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// CreateSecret mocks base method
func (m *MockStorage) CreateSecret(secret *storage.SecretData) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSecret", secret)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSecret indicates an expected call of CreateSecret
func (mr *MockStorageMockRecorder) CreateSecret(secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSecret", reflect.TypeOf((*MockStorage)(nil).CreateSecret), secret)
}

// GetSecret mocks base method
func (m *MockStorage) GetSecret(secretID string) (*storage.SecretData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", secretID)
	ret0, _ := ret[0].(*storage.SecretData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret
func (mr *MockStorageMockRecorder) GetSecret(secretID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockStorage)(nil).GetSecret), secretID)
}
