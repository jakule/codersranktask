/*
 * Secret Server
 *
 * This is an API of a secret service. You can save your secret by using the API. You can restrict the access of a secret after the certen number of views or after a certen period of time.
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package server

import (
	"encoding/json"
	"encoding/xml"
	"fmt"
	"net/http"
	"strconv"

	"github.com/jakule/codersranktask/internal"
)

func parseFormInt(r *http.Request, fieldName string) (int, error) {
	s := r.FormValue(fieldName)
	if s == "" {
		return 0, fmt.Errorf("expireAfterViews is missing")
	}

	val, err := strconv.Atoi(s)
	if err != nil {
		return 0, fmt.Errorf("expireAfterViews is not an integer")
	}

	return val, nil
}

func writeResponse(c *internal.CallParams, w http.ResponseWriter, r *http.Request, secretModel *Secret) {
	var data []byte
	var contentType string
	var err error

	acceptHeader := r.Header.Get("Accept")
	switch acceptHeader {
	case "application/json":
		contentType = "application/json; charset=UTF-8"
		data, err = json.Marshal(secretModel)
		if err != nil {
			http.Error(w, "internal server error", http.StatusInternalServerError)
			return
		}
	case "application/xml":
		contentType = "application/xml; charset=UTF-8"
		data, err = xml.Marshal(secretModel)
		if err != nil {
			http.Error(w, "internal server error", http.StatusInternalServerError)
			return
		}
	default:
		c.Errorf("unsupported response type: %s", acceptHeader)
		http.Error(w, "unsupported response type", http.StatusBadRequest)
		return
	}

	w.Header().Set("Content-Type", contentType)
	w.WriteHeader(http.StatusOK)
	_, _ = w.Write(data)
}
